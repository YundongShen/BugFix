from metagpt.software_company import generate_repo, ProjectRepo
repo: ProjectRepo = generate_repo(idea="创建一个学生信息管理系统，要求:\
                                  1.项目包括前端和后端，前端需要在浏览器运行，前端的文件包括 html，css 和 js，前端使用Ajax请求后端接口，除此之外，不要使用任何其他框架，例如vue，react，angular等。\
                                  2.前端需要提供学生信息注册，登录功能，登录成功后，要显示学生的姓名，年级，专业学号这些信息，学生可以修改这些信息并提交修改。\
                                  3.前端需要提供管理人员登录功能，管理人员的账号是admin，密码是Admin#12345，管理人员登录后，可以列出所有的学生信息，并允许删除某个学生的信息。\
                                  4.后端需要使用基于Python的FastAPI和MySQL数据库，后端不得使用nodejs的方案,后端不得使用任何js框架。\
                                  5.后端需要使用基于Python的FastAPI作为服务框架对接前端的请求，并使用MySQL数据库存储前面几条中提到的信息, MySQL 数据库的连接账户是“root”，密码是“1234”。\
                                  6.后端代码必须包含创建数据库的代码，确保运行时不会出现数据库不存在的情况。\
                                  7.后端必须包含基于Python的FastApi框架的对接前端的业务逻辑和基于MySQL的数据库的实现，再次强调，后端使用基于python的FastApi框架方案，不得使用基于nodejs的方案。\
                                  8.后端的功能实现要完整，不得出现遗漏，例如学生信息的注册，登录，修改，删除，管理人员的登录，列出所有学生信息，删除某个学生信息等功能都需要实现。不能出现功能缺失，功能不全的情况，尤其是后端的数据库实现，数据库的连接，业务逻辑的实现。不能漏掉某些文件没有实现，导致互相调用出现问题。\
                                  9.要确保前后端的调用没有问题，参数需要匹配。前端访问后端的接口参数需要匹配，例如注册接口需要包含姓名，年级，专业学号等参数，登录接口需要包含用户名和密码等参数，修改接口需要包含修改的学生信息，删除接口需要包含删除的学生信息的id等参数。不能出现因为参数不匹配或是访问路径不正确导致的错误。\
                                  10.前端的文件需要存放在static文件夹中，需要提供启动的main.py 文件，main.py 需要包括用FastAPI实现的static文件的mount代码和前端入口html页面访问的路径映射，以实现当main.py运行后，可以直接通过浏览器访问前端页面。\
                                  11.请在项目启动文件main.py的确保FastApi 对象的声明和实现，确保项目能够正常启动。\
                                  12.请先写后端代码，再写前端代码，前端代码需要和后端代码配合，才能实现功能, 请先写后端代码，再写前端代码， 前端代码要参考后端的接口，参数，返回值，前端代码需要和后端代码配合。\
                                  13.对于前端文件，请先写html,css, 最后写 javascript, 需要确保 javascrip 中引用的html的元素的id和class等名称正确。",
								  investment=30000000000.0,
								  n_round=80,
    							  code_review=True,
    							  run_tests=True,
    							  implement=True)  # or ProjectRepo("<path>")
print(repo)  # it will print the repo structure with files